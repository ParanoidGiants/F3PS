name: Test, Build, and Deploy via GameCI and Butler

on:
  push:
    branches:
      - 'locojoetive/*'
      - 'wildcard/*'
      - 'fabaone/*'
      - 'herrnock/*'
      - 'release/*'
      - development
      - main

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  checkLicense:
    name: Check for the Unity license ‚òëÔ∏è
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license ‚ò†Ô∏è
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1

  testRunner:
    needs: checkLicense
    name: Test all modes üìù
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-test-project
          restore-keys: |
            Library-test-project-
            Library-

      - uses: webbertakken/unity-test-runner@v2
        id: testRunner
        with:
          testMode: all

  buildWebGL:
    needs: testRunner
    name: Build for WebGL üñ•Ô∏è and Deploy to Itch.io üöÄ
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: WebGL

      - name: Install Butler, zip the build and push it to itch.io
        shell: bash
        env:
          BUTLER_GAME_ID: ${{ secrets.BUTLER_GAME_ID }}
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          BUTLER_USER_NAME: ${{ secrets.BUTLER_USER_NAME }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          cd ~
          echo "------------------------------------------------------------------------"
          echo "Downloading Butler...."
          echo "------------------------------------------------------------------------"
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          echo "------------------------------------------------------------------------"
          echo "Unzipping Butler...."
          echo "------------------------------------------------------------------------"
          unzip butler.zip
          chmod +x butler
          echo "------------------------------------------------------------------------"
          echo "Packaging WebGL build into current-build.zip"
          echo "------------------------------------------------------------------------"
          cd work/$PROJECT_NAME/$PROJECT_NAME/build/WebGL/WebGL
          zip -r ~/current-build.zip .
          chmod +x ~/butler
          echo "------------------------------------------------------------------------"
          echo "Determining branch for deploy suffix"
          echo "------------------------------------------------------------------------"
          # Extract the branch name from the full ref
          BRANCH=${GITHUB_REF#refs/heads/}
          echo "Detected branch: $BRANCH"
          # Set the suffix based on branch prefix or exact match
          if [[ "$BRANCH" == locojoetive/* ]]; then
            SUFFIX="locojoetive"
          elif [[ "$BRANCH" == wildcard/* ]]; then
            SUFFIX="wildcard"
          elif [[ "$BRANCH" == fabaone/* ]]; then
            SUFFIX="fabaone"
          elif [[ "$BRANCH" == herrnock/* ]]; then
            SUFFIX="herrnock"
          elif [[ "$BRANCH" == development ]]; then
            SUFFIX="development"
          elif [[ "$BRANCH" == release/* ]]; then
            SUFFIX="release"
          elif [[ "$BRANCH" == main ]]; then
            SUFFIX=""
          else
            echo "Branch not matched for deployment rules, exiting."
            exit 1
          fi
          echo "Using suffix: '$SUFFIX'"
          echo "------------------------------------------------------------------------"
          echo "Pushing current-build.zip to itch.io"
          echo "------------------------------------------------------------------------"
          # Build the full game id with suffix if not empty
          if [ -n "$SUFFIX" ]; then
            TARGET="$BUTLER_GAME_ID-$SUFFIX:html5"
          else
            TARGET="$BUTLER_GAME_ID:html5"
          fi

          echo "Uploading to game '$BUTLER_USER_NAME/$TARGET'"
          ~/butler push ~/current-build.zip $BUTLER_USER_NAME/$TARGET
